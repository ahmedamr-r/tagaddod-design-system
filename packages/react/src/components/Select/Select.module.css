/* Select Component Styles */

.container {
  display: flex;
  flex-direction: column;
  gap: var(--t-space-100);
  width: 100%;
}

.fullWidth {
  width: 100%;
}

/* Label styles */
.labelContainer {
  display: flex;
  align-items: center;
  margin-bottom: var(--t-space-150);
}

.label {
  font: var(--t-typography-body-md-default);
  color: var(--t-color-text-primary);
  position: relative;
  line-height: 1.5;
}


/* Line height trim for label */
.label::before,
.label::after {
  content: '';
  display: block;
  height: 0;
}

/* English font adjustment (smaller trim) */
.label::before {
  margin-top: -0.15em;
}

.label::after {
  margin-bottom: -0.15em;
}

/* Arabic font adjustment (larger trim) */
:global([dir="rtl"]) .label::before {
  margin-top: 0.1em;
}

:global([dir="rtl"]) .label::after {
  margin-bottom: -0.25em;
}


.optional {
  color: var(--t-color-text-secondary);
  font-size: var(--t-font-size-300);
  font-weight: var(--t-font-weight-regular);
  margin-inline-start: var(--t-space-100);
}

/* Select trigger styles */
.trigger {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  border-radius: var(--t-border-radius-200);
  border: 1px solid var(--t-color-border-secondary);
  background-color: var(--t-color-surface-primary);
  color: var(--t-color-text-primary);
  font-family: var(--t-font-family-primary);
  cursor: pointer;
  transition: all var(--t-duration-base) var(--t-easing-in-out);
  overflow: hidden;
  padding: var(--t-space-300);
}

/* RTL specific layout - reverse the entire flex direction */
:global([dir="rtl"]) .trigger {
  flex-direction: row-reverse;
}

.trigger:hover {
  border-color: var(--t-color-border-hover);
  background-color: var(--t-color-surface-hover);
}

.trigger:focus {
  outline: none;
  border-color: var(--t-color-fill-brand);
  box-shadow: 0 0 0 1px var(--t-color-fill-brand-hover);
}

.trigger[data-state="open"] {
  border-color: var(--t-color-fill-brand);
  box-shadow: 0 0 0 1px var(--t-color-fill-brand-hover);
}

.trigger[data-placeholder] {
  color: var(--t-color-text-secondary);
}

.disabled {
  background-color: var(--t-color-surface-disabled);
  border-color: var(--t-color-border-disabled);
  opacity: 0.5;
  cursor: not-allowed;
}

/* Content wrapper - groups prefix and value together */
.contentWrapper {
  display: flex;
  align-items: center;
  flex: 1;
  gap: var(--t-space-100); /* 4px gap between prefix and value */
  overflow: hidden;
}

/* RTL content wrapper - ensure prefix comes before value */
:global([dir="rtl"]) .contentWrapper {
  flex-direction: row-reverse;
}

/* Prefix styling */
.prefix {
  display: flex;
  align-items: center;
  color: var(--t-color-icon-secondary);
  flex-shrink: 0;
}

/* RTL vertical centering for prefix */
:global([dir="rtl"]) .prefix {
  padding-top: 2px;
  padding-bottom: 0px;
}

/* Select value styling - The span inside the trigger */
.value {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  text-align: start;
  display: block;
  flex: 1;
}

/* Target the actual span tag inside the trigger */
.trigger span[data-radix-select-value] {
  flex: 1;
  text-align: start;
}

/* RTL styling for the span tag inside trigger */
:global([dir="rtl"]) .trigger span {
  padding-top: 2px;
  padding-bottom: 0px;
}

/* RTL styling for value span */
:global([dir="rtl"]) .value {
  padding-top: 2px;
  padding-bottom: 0px;
}

/* Icon styling */
.icon {
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--t-color-icon-secondary);
  transition: transform var(--t-duration-fast) var(--t-easing-in-out);
  flex-shrink: 0;
  width: 1rem;
  height: 1rem;
}

/* RTL icon positioning */
:global([dir="rtl"]) .icon {
  padding-top: 2px;
  padding-bottom: 0px;
}

.trigger[data-state="open"] .icon {
  transform: rotate(180deg);
}

/* Size variants */
.sizeMicro .trigger {
  height: var(--t-size-700); /* 28px fixed height */
  min-height: var(--t-size-700);
  padding: var(--t-space-300);
  gap: var(--t-space-100);
font: var(--t-typography-body-sm-default);
}

/* RTL vertical centering for micro size */
:global([dir="rtl"]) .sizeMicro .value {
  padding-top: calc(var(--t-space-50) + 1px);
  padding-bottom: calc(var(--t-space-50) - 1px);
}

.sizeMicro .label {
  font: var(--t-typography-body-sm-default);
}

.sizeMedium .trigger {
  height: var(--t-size-800); /* 32px fixed height */
  min-height: var(--t-size-800);
  padding: var(--t-space-300);
  gap: var(--t-space-100);
font: var(--t-typography-body-sm-default);
}

/* RTL vertical centering for medium size */
:global([dir="rtl"]) .sizeMedium .value {
  padding-top: calc(var(--t-space-150) + 2px);
  padding-bottom: calc(var(--t-space-150) - 2px);
}

.sizeMedium .label {
  font: var(--t-typography-body-sm-default);
}

.sizeLarge .trigger {
  height: var(--t-size-1000); /* 40px fixed height */
  min-height: var(--t-size-1000);
  padding: var(--t-space-300);
  gap: var(--t-space-100);
font: var(--t-typography-body-md-default);
}
.sizeLarge .label {
  font: var(--t-typography-body-md-default);
}
/* RTL vertical centering for large size */
:global([dir="rtl"]) .sizeLarge .value {
  padding-top: calc(var(--t-space-200) + 3px);
  padding-bottom: calc(var(--t-space-200) - 3px);
}

/* Content (dropdown) styles */
.content {
  position: relative;
  z-index: var(--t-z-dropdown, 1000);
  min-width: var(--radix-select-trigger-width);
  max-height: var(--radix-select-content-available-height);
  border-radius: var(--t-border-radius-200);
  border: 1px solid var(--t-color-border-secondary);
  background-color: var(--t-color-surface-primary);
  box-shadow: var(--t-shadow-200);
  overflow: hidden;
  animation: fadeIn var(--t-duration-fast) var(--t-easing-in-out);
}

/* Enhanced z-index for Select content when inside modal */
.modalContent {
  z-index: 2147483647 !important;
  position: fixed !important;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: scale(0.96);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.viewport {
  padding: var(--t-space-100);
}

.scrollButton {
  display: flex;
  align-items: center;
  justify-content: center;
  height: var(--t-size-800);
  background-color: var(--t-color-surface-primary);
  color: var(--t-color-icon-secondary);
  cursor: default;
}

/* Select item styles */
.item {
  position: relative;
  display: flex;
  align-items: center;
  padding-block: var(--t-space-150);
  padding-inline: var(--t-space-300);
  border-radius: var(--t-border-radius-100);
  font-size: var(--t-font-size-350);
  font-family: var(--t-font-family-primary);
  color: var(--t-color-text-primary);
  cursor: pointer;
  user-select: none;
  outline: none;
  transition: background-color var(--t-duration-fast) var(--t-easing-in-out);
}

/* RTL item layout */
:global([dir="rtl"]) .item {
  flex-direction: row-reverse;
}

.item:hover {
  background-color: var(--t-color-surface-hover);
}

.item:focus {
  background-color: var(--t-color-surface-active);
}

.item[data-state="checked"] {
  background-color: var(--t-color-surface-brand-subdued);
  color: var(--t-color-text-brand);
}

.itemDisabled {
  opacity: 0.5;
  cursor: not-allowed;
  pointer-events: none;
}

.itemText {
  flex: 1;
  text-align: left;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* RTL item text alignment */
:global([dir="rtl"]) .itemText {
  text-align: right;
  direction: rtl;
}

.itemIndicator {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-left: var(--t-space-200);
  color: var(--t-color-icon-brand);
}

/* RTL item indicator positioning */
:global([dir="rtl"]) .itemIndicator {
  margin-left: 0;
  margin-right: var(--t-space-200);
  order: -1;
}

/* Error state */
.error .trigger {
  border-color: var(--t-color-fill-critical);
}

.error .trigger:focus {
  box-shadow: 0 0 0 2px var(--t-color-fill-critical-secondary);
}

.errorMessage {
  display: flex;
  align-items: center;
  color: var(--t-color-text-critical);
  font: var(--t-typography-body-sm-default);
  margin-top: var(--t-space-200);
  position: relative;
  line-height: 1.5;
}

/* Line height trim for error message */
.errorMessage::before,
.errorMessage::after {
  content: '';
  display: block;
  height: 0;
}

/* English font adjustment (smaller trim) */
.errorMessage::before {
  margin-top: -0.15em;
}

.errorMessage::after {
  margin-bottom: -0.15em;
}

/* Arabic font adjustment (larger trim) */
:global([dir="rtl"]) .errorMessage::before {
  margin-top: 0.1em;
}

:global([dir="rtl"]) .errorMessage::after {
  margin-bottom: -0.25em;
}

.errorIcon {
  color: var(--t-color-icon-critical);
  margin-inline-end: var(--t-space-200);
  flex-shrink: 0;
}

/* Help text */
.helpText {
  font: var(--t-typography-body-sm-default);
  color: var(--t-color-text-secondary);
  margin-top: var(--t-space-200);
  position: relative;
  line-height: 1.5;
}

/* Line height trim for help text */
.helpText::before,
.helpText::after {
  content: '';
  display: block;
  height: 0;
}

/* English font adjustment (smaller trim) */
.helpText::before {
  margin-top: -0.15em;
}

.helpText::after {
  margin-bottom: -0.15em;
}

/* Arabic font adjustment (larger trim) */
:global([dir="rtl"]) .helpText::before {
  margin-top: 0.1em;
}

:global([dir="rtl"]) .helpText::after {
  margin-bottom: -0.25em;
}

/* Responsive adjustments */
@media (max-width: 640px) {
  .trigger,
  .item {
    font-size: var(--t-font-size-300);
  }
}

/* Search functionality styles */
.searchContainer {
  padding: var(--t-space-100);
  border-bottom: 1px solid var(--t-color-border-secondary);
  margin-bottom: var(--t-space-100);
}

.searchInput {
  /* Override any inherited styles from TextInput */
  margin: 0;
}

.noResults {
  padding: var(--t-space-300);
  text-align: center;
  color: var(--t-color-text-secondary);
  font-size: var(--t-font-size-300);
  font-style: italic;
}