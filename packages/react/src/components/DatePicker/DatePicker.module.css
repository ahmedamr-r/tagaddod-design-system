/* DatePicker Component Styles */

.container {
  position: relative;
  width: 100%;
}

.triggerWrapper {
  width: 100%;
  cursor: pointer;
}

/* Calendar button styling */
.calendarButton {
  display: flex;
  align-items: center;
  justify-content: center;
  background: none;
  border: none;
  color: var(--t-color-icon-secondary);
  cursor: pointer;
  padding: var(--t-space-50);
  border-radius: var(--t-border-radius-100);
  transition: all var(--t-duration-fast) var(--t-easing-in-out);
}

.calendarButton:hover {
  background-color: var(--t-color-surface-hover);
  color: var(--t-color-icon-primary);
}

.calendarButton:active {
  background-color: var(--t-color-surface-active);
}

.calendarButton:focus {
  outline: none;
  box-shadow: 0 0 0 2px var(--t-color-fill-brand);
}

/* Calendar container within popover */
.calendarContainer {
  position: relative;
  background: var(--t-color-surface-primary);
  border: 1px solid var(--t-color-border-secondary);
  border-radius: var(--t-border-radius-300);
  box-shadow: var(--t-shadow-300);
  overflow: hidden;
}

/* RTL support for calendar container */
:global([dir="rtl"]) .calendarContainer {
  font-family: var(--t-font-family-arabic);
}

/* Focus styles for keyboard navigation */
.container:focus-within .calendarContainer {
  border-color: var(--t-color-fill-brand);
  box-shadow: 0 0 0 1px var(--t-color-fill-brand-hover), var(--t-shadow-300);
}

/* Animation for calendar appearance */
@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-4px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(4px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Apply animations based on popover position */
.calendarContainer[data-side="bottom"] {
  animation: slideDown 0.2s ease-out;
}

.calendarContainer[data-side="top"] {
  animation: slideUp 0.2s ease-out;
}

/* Responsive adjustments */
@media (max-width: 640px) {
  .calendarContainer {
    position: fixed;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    width: calc(100vw - var(--t-space-400));
    max-width: 320px;
    z-index: 1000;
  }
  
  .calendarContainer[data-side="bottom"],
  .calendarContainer[data-side="top"] {
    animation: none;
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .calendarContainer {
    border-width: 2px;
    border-color: var(--t-color-border-primary);
  }
  
  .calendarButton {
    border: 1px solid var(--t-color-border-secondary);
  }
  
  .calendarButton:hover {
    border-color: var(--t-color-border-primary);
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .calendarContainer,
  .calendarContainer[data-side="bottom"],
  .calendarContainer[data-side="top"] {
    animation: none;
  }

  .calendarButton {
    transition: none;
  }
}

/* DateRangePicker Component Styles */

.dateRangeContainer {
  position: relative;
  width: 100%;
}

/* Invisible trigger positioned at center for popover positioning */
.centerTrigger {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 1px;
  height: 1px;
  opacity: 0;
  pointer-events: none;
  z-index: -1;
}

.rangeInputs {
  display: flex;
  align-items: flex-end;
  gap: var(--t-space-200);
  width: 100%;
}

/* Gap variations */
.gap-sm .rangeInputs {
  gap: var(--t-space-100);
}

.gap-md .rangeInputs {
  gap: var(--t-space-200);
}

.gap-lg .rangeInputs {
  gap: var(--t-space-300);
}

.rangeInputWrapper {
  flex: 1;
  min-width: 0; /* Prevent overflow */
}

.rangeLabel {
  display: block;
  margin-bottom: var(--t-space-100);
  font-size: var(--t-font-size-75);
  font-weight: var(--t-font-weight-medium);
  color: var(--t-color-text-secondary);
  line-height: var(--t-line-height-tight);
}

.rangeSeparator {
  display: flex;
  align-items: center;
  justify-content: center;
  padding-bottom: var(--t-space-50); /* Align with input bottom */
  color: var(--t-color-icon-secondary);
  flex-shrink: 0;
}

.separatorIcon {
  transition: transform var(--t-duration-fast) var(--t-easing-in-out);
}

/* RTL support for separator icon */
:global([dir="rtl"]) .separatorIcon {
  transform: scaleX(-1);
}

/* RTL label alignment */
:global([dir="rtl"]) .rangeLabel {
  text-align: right;
  font-family: var(--t-font-family-arabic);
  line-height: var(--t-line-height-arabic, 1.2);
}

/* Focus states for range inputs */
.rangeInputWrapper:focus-within .rangeLabel {
  color: var(--t-color-text-link);
}

/* Active state styling */
.dateRangeContainer[data-active="start"] .rangeInputWrapper:first-child .rangeLabel,
.dateRangeContainer[data-active="end"] .rangeInputWrapper:last-child .rangeLabel {
  color: var(--t-color-text-link);
}

/* Range separator hover state */
.rangeInputs:hover .separatorIcon {
  color: var(--t-color-icon-primary);
  transform: translateX(2px);
}

:global([dir="rtl"]) .rangeInputs:hover .separatorIcon {
  transform: scaleX(-1) translateX(2px);
}

/* Responsive layout for mobile */
@media (max-width: 640px) {
  .rangeInputs {
    flex-direction: column;
    gap: var(--t-space-300);
  }

  .gap-sm .rangeInputs {
    gap: var(--t-space-200);
  }

  .gap-md .rangeInputs {
    gap: var(--t-space-300);
  }

  .gap-lg .rangeInputs {
    gap: var(--t-space-400);
  }

  .rangeSeparator {
    order: 1;
    padding: 0;
    transform: rotate(90deg);
  }

  .rangeInputWrapper:last-child {
    order: 2;
  }

  :global([dir="rtl"]) .rangeSeparator {
    transform: rotate(90deg) scaleX(-1);
  }
}

/* Error state for range inputs */
.dateRangeContainer[data-error="true"] .rangeLabel {
  color: var(--t-color-text-danger);
}

/* Disabled state for range inputs */
.dateRangeContainer[data-disabled="true"] .rangeLabel {
  color: var(--t-color-text-disabled);
}

.dateRangeContainer[data-disabled="true"] .rangeSeparator {
  color: var(--t-color-icon-disabled);
}

/* Animation for state transitions */
.rangeLabel,
.separatorIcon {
  transition: color var(--t-duration-fast) var(--t-easing-in-out);
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .rangeLabel {
    font-weight: var(--t-font-weight-semibold);
  }

  .rangeSeparator {
    background-color: var(--t-color-surface-secondary);
    border-radius: var(--t-border-radius-full);
    padding: var(--t-space-50);
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .rangeLabel,
  .separatorIcon,
  .separatorIcon:hover {
    transition: none;
    transform: none;
  }

  :global([dir="rtl"]) .separatorIcon {
    transform: scaleX(-1);
  }

  :global([dir="rtl"]) .rangeInputs:hover .separatorIcon {
    transform: scaleX(-1);
  }
}

/* Analytics Layout Styles */

.analyticsContainer {
  width: 680px;
  max-width: 90vw;
  max-height: 80vh;
  background: var(--t-color-surface-primary);
  border: 1px solid var(--t-color-border-secondary);
  border-radius: var(--t-border-radius-300);
  box-shadow: var(--t-shadow-400);
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.analyticsLayout {
  display: flex;
  min-height: 420px;
  flex: 1;
}

.presetSidebar {
  width: 180px;
  background: var(--t-color-surface-secondary);
  border-right: 1px solid var(--t-color-border-secondary);
  padding: var(--t-space-300);
  display: flex;
  flex-direction: column;
}

.sidebarHeader {
  margin-bottom: var(--t-space-300);
}

.sidebarTitle {
  font: var(--t-typography-body-md-default);
  font-weight: var(--t-font-weight-semibold);
  color: var(--t-color-text-primary);
  margin: 0;
  line-height: 1.5;
}

/* RTL support for sidebar title */
:global([dir="rtl"]) .sidebarTitle {
  font-family: var(--t-font-family-arabic);
  line-height: var(--t-line-height-arabic, 1.2);
}

.presetList {
  display: flex;
  flex-direction: column;
  gap: var(--t-space-100);
  flex: 1;
}

.presetButton {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  width: 100%;
  padding: var(--t-space-200) var(--t-space-300);
  background: transparent;
  border: 1px solid transparent;
  border-radius: var(--t-border-radius-200);
  font: var(--t-typography-body-sm-default);
  font-weight: var(--t-font-weight-medium);
  color: var(--t-color-text-secondary);
  cursor: pointer;
  transition: all var(--t-duration-fast) var(--t-easing-in-out);
  text-align: left;
  line-height: 1.5;
}

.presetButton:hover {
  background: var(--t-color-surface-hover);
  color: var(--t-color-text-primary);
}

.presetButtonActive {
  background: var(--t-color-fill-brand-secondary);
  color: var(--t-color-text-link);
  border-color: var(--t-color-border-brand);
}

/* RTL support for preset buttons */
:global([dir="rtl"]) .presetButton {
  text-align: right;
  font-family: var(--t-font-family-arabic);
  line-height: var(--t-line-height-arabic, 1.2);
}

.timezoneInfo {
  margin-top: auto;
  padding-top: var(--t-space-300);
  font: var(--t-typography-caption-sm-default);
  color: var(--t-color-text-tertiary);
  text-align: center;
}

/* RTL support for timezone info */
:global([dir="rtl"]) .timezoneInfo {
  font-family: var(--t-font-family-arabic);
}

.contentArea {
  flex: 1;
  padding: var(--t-space-300);
  display: flex;
  flex-direction: column;
}

.customRangeContainer {
  display: flex;
  flex-direction: column;
  gap: var(--t-space-300);
  height: 100%;
}

.rangeTypeSection {
  display: flex;
  align-items: center;
  gap: var(--t-space-200);
}

.rangeTypeSelect {
  padding: var(--t-space-200) var(--t-space-300);
  border: 1px solid var(--t-color-border-secondary);
  border-radius: var(--t-border-radius-200);
  font: var(--t-typography-body-sm-default);
  color: var(--t-color-text-primary);
  background: var(--t-color-surface-primary);
  cursor: pointer;
  min-width: 120px;
}

.rangeTypeSelect:focus {
  outline: none;
  border-color: var(--t-color-fill-brand);
  box-shadow: 0 0 0 1px var(--t-color-fill-brand);
}

.customDateInputs {
  display: flex;
  align-items: center;
  gap: var(--t-space-200);
  flex-wrap: wrap;
}

.dateConnector {
  color: var(--t-color-text-secondary);
  font: var(--t-typography-body-sm-default);
}

.addTimeButton {
  display: flex;
  align-items: center;
  gap: var(--t-space-100);
  padding: var(--t-space-100) var(--t-space-200);
  background: transparent;
  border: none;
  color: var(--t-color-text-link);
  font: var(--t-typography-body-sm-default);
  cursor: pointer;
  border-radius: var(--t-border-radius-200);
  transition: all var(--t-duration-fast) var(--t-easing-in-out);
}

.addTimeButton:hover {
  background: var(--t-color-surface-hover);
}

.calendarContainer {
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: flex-start;
}

.analyticsActions {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--t-space-300);
  border-top: 1px solid var(--t-color-border-secondary);
  background: var(--t-color-surface-primary);
}

.savePresetButton {
  padding: var(--t-space-200) var(--t-space-400);
  background: transparent;
  border: 1px solid var(--t-color-border-secondary);
  border-radius: var(--t-border-radius-200);
  font: var(--t-typography-body-sm-default);
  font-weight: var(--t-font-weight-medium);
  color: var(--t-color-text-primary);
  cursor: pointer;
  transition: all var(--t-duration-fast) var(--t-easing-in-out);
}

.savePresetButton:hover {
  border-color: var(--t-color-border-primary);
  background: var(--t-color-surface-hover);
}

.actionGroup {
  display: flex;
  gap: var(--t-space-200);
}

.cancelButton {
  padding: var(--t-space-200) var(--t-space-400);
  background: transparent;
  border: 1px solid var(--t-color-border-secondary);
  border-radius: var(--t-border-radius-200);
  font: var(--t-typography-body-sm-default);
  font-weight: var(--t-font-weight-medium);
  color: var(--t-color-text-primary);
  cursor: pointer;
  transition: all var(--t-duration-fast) var(--t-easing-in-out);
}

.cancelButton:hover {
  border-color: var(--t-color-border-primary);
  background: var(--t-color-surface-hover);
}

.applyButton {
  padding: var(--t-space-200) var(--t-space-400);
  background: var(--t-color-fill-brand);
  border: 1px solid var(--t-color-fill-brand);
  border-radius: var(--t-border-radius-200);
  font: var(--t-typography-body-sm-default);
  font-weight: var(--t-font-weight-medium);
  color: var(--t-color-text-on-fill);
  cursor: pointer;
  transition: all var(--t-duration-fast) var(--t-easing-in-out);
}

.applyButton:hover {
  background: var(--t-color-fill-brand-hover);
  border-color: var(--t-color-fill-brand-hover);
}

/* Responsive design for analytics layout */
@media (max-width: 768px) {
  .analyticsContainer {
    width: 95vw;
    max-height: 90vh;
  }

  .analyticsLayout {
    flex-direction: column;
    min-height: auto;
  }

  .presetSidebar {
    width: 100%;
    border-right: none;
    border-bottom: 1px solid var(--t-color-border-secondary);
  }

  .presetList {
    flex-direction: row;
    flex-wrap: wrap;
    gap: var(--t-space-100);
  }

  .presetButton {
    flex: 0 0 auto;
    min-width: fit-content;
  }

  .customDateInputs {
    flex-direction: column;
    align-items: stretch;
  }

  .analyticsActions {
    flex-direction: column;
    gap: var(--t-space-200);
  }

  .actionGroup {
    width: 100%;
    justify-content: space-between;
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .presetButton {
    border-color: var(--t-color-border-secondary);
  }

  .presetButtonActive {
    border-color: var(--t-color-border-brand);
    font-weight: var(--t-font-weight-semibold);
  }

  .analyticsContainer {
    border-width: 2px;
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .presetButton,
  .savePresetButton,
  .cancelButton,
  .applyButton,
  .addTimeButton {
    transition: none;
  }
}