/* Base styles for RadioGroup */
.RadioGroup {
  display: flex;
  flex-direction: column;
  gap: var(--t-space-200);
}

/* Container for the entire radio button component */
.RadioButtonContainer {
  display: flex;
  flex-direction: column;
  width: 100%;
  gap: var(--t-space-100);
  align-items: flex-start;
}

/* Wrapper for radio button and label in a row */
.RadioButtonWrapper {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: var(--t-space-200);
  width: 100%;
}

/* Reverse the flex direction in RTL mode */
:global([dir="rtl"]) .RadioButtonWrapper {
  flex-direction: row-reverse;
}

/* Radio button item */
.RadioButtonItem {
  all: unset;
  width: var(--t-size-400);
  height: var(--t-size-400);
  border-radius: 100%;
  border: var(--t-border-width-25) solid var(--t-color-border-primary);
  background-color: var(--t-color-surface-primary);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all var(--t-duration-fast) var(--t-easing-in-out);
  flex-shrink: 0;
}

.RadioButtonItem:hover {
  border-color: var(--t-color-border-hover);
  background-color: var(--t-color-surface-hover);
}

.RadioButtonItem:focus-visible {
  outline: var(--t-border-width-25) solid var(--t-color-fill-brand);
  outline-offset: var(--t-space-50);
}

/* When checked, change the border color */
.RadioButtonItem[data-state="checked"] {
  border-color: var(--t-color-fill-brand);
}

/* The indicator (inner circle) when checked */
.RadioButtonIndicator {
  display: flex;
  align-items: center;
  justify-content: center;
  width: calc(var(--t-size-400) / 2);
  height: calc(var(--t-size-400) / 2);
  position: relative;
  border-radius: 50%;
  background-color: var(--t-color-fill-brand);
  transform: scale(0);
  transition: transform var(--t-duration-fast) var(--t-easing-in-out);
}

.RadioButtonItem[data-state="checked"] .RadioButtonIndicator {
  transform: scale(1);
}

/* Label styling */
.Label {
  font-family: var(--t-font-family-primary);
  font-size: var(--t-font-size-350);
  font-weight: var(--t-font-weight-medium);
  color: var(--t-color-text-primary);
  cursor: pointer;
  position: relative;
  line-height: 1.5;
}

/* Line height trim for label */
.Label::before,
.Label::after {
  content: '';
  display: block;
  height: 0;
}

/* English font adjustment (smaller trim) */
.Label::before {
  margin-top: -0.15em;
}

.Label::after {
  margin-bottom: -0.15em;
}

/* Arabic font adjustment (larger trim) */
:global([dir="rtl"]) .Label::before {
  margin-top: -0.25em;
}

:global([dir="rtl"]) .Label::after {
  margin-bottom: -0.25em;
}

/* Screen reader only class for hiding labels visually */
.srOnly {
  position: absolute;
  width: var(--t-size-25);
  height: var(--t-size-25);
  padding: 0;
  margin: calc(-1 * var(--t-size-25));
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

/* Help text styling */
.HelpText {
  font-family: var(--t-font-family-primary);
  font-size: var(--t-font-size-300);
  color: var(--t-color-text-secondary);
  position: relative;
  line-height: 1.5;
}

/* Line height trim for help text */
.HelpText::before,
.HelpText::after {
  content: '';
  display: block;
  height: 0;
}

/* English font adjustment (smaller trim) */
.HelpText::before {
  margin-top: -0.15em;
}

.HelpText::after {
  margin-bottom: -0.15em;
}

/* Arabic font adjustment (larger trim) */
:global([dir="rtl"]) .HelpText::before {
  margin-top: -0.25em;
}

:global([dir="rtl"]) .HelpText::after {
  margin-bottom: -0.25em;
}

/* In LTR, indent the helpText from the left */
:global([dir="ltr"]) .HelpText {
  padding-left: calc(var(--t-size-400) + var(--t-space-200));
  margin-inline-start: 0;
}

/* In RTL, indent the helpText from the right */
:global([dir="rtl"]) .HelpText {
  padding-right: calc(var(--t-size-400) + var(--t-space-200));
  margin-inline-end: 0;
}

/* Disabled state styling */
.RadioButtonItem.disabled {
  background-color: var(--t-color-surface-disabled);
  border-color: var(--t-color-border-disabled);
  cursor: not-allowed;
}

.Label.disabled {
  color: var(--t-color-text-disabled);
  cursor: not-allowed;
}

/* Responsive adjustments */
@media (max-width: 640px) {
  .Label {
    font-size: var(--t-font-size-300);
  }
}
