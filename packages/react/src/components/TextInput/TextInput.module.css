/* TextInput Component Styles */

.container {
  display: flex;
  flex-direction: column;
  gap: var(--t-space-100);
  width: 100%;
}

.fullWidth {
  width: 100%;
}

/* Label styles */
.labelContainer {
  display: flex;
  align-items: center;
  margin-bottom: var(--t-space-100);
}

.label {
  font-family: var(--t-font-family-primary);
  font-size: var(--t-font-size-350);
  font-weight: var(--t-font-weight-medium);
  color: var(--t-color-text-primary);
  position: relative;
  line-height: 1.5;
}

/* Line height trim for label */
.label::before,
.label::after {
  content: '';
  display: block;
  height: 0;
}

/* English font adjustment (smaller trim) */
.label::before {
  margin-top: -0.15em;
}

.label::after {
  margin-bottom: -0.15em;
}

/* Arabic font adjustment (larger trim) */
:global([dir="rtl"]) .label::before {
  margin-top: .09em;
}

:global([dir="rtl"]) .label::after {
  margin-bottom: -0.25em;
}

.required {
  color: var(--t-color-fill-critical);
  margin-inline-start: var(--t-space-50);
}

.optional {
  color: var(--t-color-text-secondary);
  margin-inline-start: var(--t-space-100);
  font-size: var(--t-font-size-300);
  font-weight: var(--t-font-weight-regular);
}

/* Input wrapper and flex positioning */
.inputWrapper {
  position: relative;
  display: flex;
  width: 100%;
  border-radius: var(--t-border-radius-200);
  border: 1px solid var(--t-color-border-secondary);
  background-color: var(--t-color-surface-primary);
  overflow: hidden;
  transition: all var(--t-duration-base) var(--t-easing-in-out);
}

.inputWrapper:hover {
  border-color: var(--t-color-border-hover);
    background-color: var(--t-color-surface-hover);

}

.inputWrapper:focus-within {
  border-color: var(--t-color-fill-brand);
  box-shadow: 0 0 0 1px var(--t-color-fill-brand-hover);
}

/* Base input styles */
.input {
  flex: 1;
  border: none;
  background-color: transparent;
  color: var(--t-color-text-primary);
  padding-block: var(--t-space-200);
  padding-inline: var(--t-space-300);
  font-family: var(--t-font-family-primary);
  font-size: var(--t-font-size-350);
  outline: none;
  width: 100%;
}

/* Input states */
.input:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.inputWrapper.disabled {
  background-color: var(--t-color-surface-disabled);
  border-color: var(--t-color-border-disabled);
  opacity: 0.5;
}

.inputWrapper.readOnly {
  background-color: var(--t-color-surface-primary);
  border-color: var(--t-color-border-secondary);
  cursor: default;
  pointer-events: none;
}

.input::placeholder {
  color: var(--t-color-text-secondary);
  opacity: 0.7;
}

/* Prefix and suffix positioning with flex */
.prefix {
  display: flex;
  align-items: center;
  padding-inline-start: var(--t-space-300);
  color: var(--t-color-icon-secondary);
  /* Add 6px gap to the right of the prefix */
  margin-inline-end: var(--t-space-100); 
}

.suffix {
  display: flex;
  align-items: center;
  padding-inline-end: var(--t-space-300);
  color: var(--t-color-icon-secondary);
  /* Add 6px gap to the left of the suffix */
  margin-inline-start: var(--t-space-100);
  gap: var(--t-space-100);
}

/* Add padding adjustments for input with prefix/suffix */
.input.withPrefix {
  padding-inline-start: 0;
}

.input.withSuffix {
  padding-inline-end: 0;
}

/* Size variants with adjusted spacing */
.sizeMicro .inputWrapper {
  min-height: var(--t-size-700); /* 20px equivalent */
}

.sizeMicro .input {
  font-size: var(--t-font-size-300);
  padding-block: var(--t-space-50);
  padding-inline: var(--t-space-200);
}

.sizeMicro .prefix,
.sizeMicro .suffix {
  font-size: var(--t-font-size-300);
}

.sizeMicro .prefix {
  padding-inline-start: var(--t-space-200);
}

.sizeMicro .suffix {
  padding-inline-end: var(--t-space-200);
}

.sizeMedium .inputWrapper {
  min-height: var(--t-size-1000); /* 32px equivalent */
}

.sizeMedium .input {
  font-size: var(--t-font-size-350);
  padding-block: var(--t-space-150);
  padding-inline: var(--t-space-300);
}

.sizeMedium .prefix,
.sizeMedium .suffix {
  font-size: var(--t-font-size-350);
}

.sizeLarge .inputWrapper {
  min-height: var(--t-size-1200); /* 40px equivalent */
}

.sizeLarge .input {
  font-size: var(--t-font-size-400);
  padding-block: var(--t-space-200);
  padding-inline: var(--t-space-400);
}

.sizeLarge .prefix {
  padding-inline-start: var(--t-space-400);
}

.sizeLarge .suffix {
  padding-inline-end: var(--t-space-400);
}

.sizeLarge .prefix,
.sizeLarge .suffix {
  font-size: var(--t-font-size-400);
}

/* Icon button (for clear, password toggle, etc.) */
.iconButton {
  display: flex;
  align-items: center;
  justify-content: center;
  background: none;
  border: none;
  color: var(--t-color-icon-secondary);
  cursor: pointer;
  padding: var(--t-space-50);
  border-radius: var(--t-border-radius-100);
  transition: background-color var(--t-duration-fast) var(--t-easing-in-out);
}

.iconButton:hover {
  background-color: var(--t-color-surface-hover);
}

.iconButton:active {
  background-color: var(--t-color-surface-active);
}

/* Error state */
.error .inputWrapper {
  border-color: var(--t-color-fill-critical);
}

.error .inputWrapper:focus-within {
  box-shadow: 0 0 0 2px var(--t-color-fill-critical-secondary);
}

.errorMessage {
  display: flex;
  align-items: center;
  gap: var(--t-space-100);
  color: var(--t-color-text-critical);
  font-size: var(--t-font-size-300);
  margin-top: var(--t-space-100);
  position: relative;
  line-height: 1.5;
}

/* Line height trim for error message */
.errorMessage::before,
.errorMessage::after {
  content: '';
  display: block;
  height: 0;
}

/* English font adjustment (smaller trim) */
.errorMessage::before {
  margin-top: -0.15em;
}

.errorMessage::after {
  margin-bottom: -0.15em;
}

/* Arabic font adjustment (larger trim) */
:global([dir="rtl"]) .errorMessage::before {
  margin-top: -0.25em;
}

:global([dir="rtl"]) .errorMessage::after {
  margin-bottom: -0.25em;
}

.errorIcon {
  color: var(--t-color-icon-critical);
}

/* Help text */
.helpText {
  font-size: var(--t-font-size-300);
  color: var(--t-color-text-secondary);
  margin-top: var(--t-space-100);
  position: relative;
  line-height: 1.5;
}

/* Line height trim for help text */
.helpText::before,
.helpText::after {
  content: '';
  display: block;
  height: 0;
}

/* English font adjustment (smaller trim) */
.helpText::before {
  margin-top: -0.15em;
}

.helpText::after {
  margin-bottom: -0.15em;
}

/* Arabic font adjustment (larger trim) */
:global([dir="rtl"]) .helpText::before {
  margin-top: -0.25em;
}

:global([dir="rtl"]) .helpText::after {
  margin-bottom: -0.25em;
}

/* Responsive adjustments */
@media (max-width: 640px) {
  .input {
    font-size: var(--t-font-size-300);
  }
}
