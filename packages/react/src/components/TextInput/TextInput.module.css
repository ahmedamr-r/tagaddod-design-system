/* TextInput Component Styles */

.container {
  display: flex;
  flex-direction: column;
  gap: var(--t-space-200);
  width: 100%;
}

.label {
  font-family: var(--t-font-family-primary);
  font-size: var(--t-font-size-300);
  font-weight: var(--t-font-weight-medium);
  color: var(--t-color-text-primary);
}

.required {
  color: var(--t-color-surface-background-critical);
  margin-inline-start: var(--t-space-50);
}

.inputWrapper {
  position: relative;
  display: flex;
  width: 100%;
}

.input {
  width: 100%;
  border-radius: var(--t-border-radius-200);
  border: 1px solid var(--t-color-border-secondary);
  background-color: var(--t-color-surface-background-secondary);
  color: var(--t-color-text-primary);
  padding: var(--t-space-200) var(--t-space-300);
  font-family: var(--t-font-family-primary);
  font-size: var(--t-font-size-350);
  transition: all var(--t-duration-base) var(--t-easing-in-out);
  outline: none;
  min-height: var(--t-size-1000);
}

.input:focus {
  border-color: var(--t-color-bg-fill-brand);
  box-shadow: 0 0 0 2px var(--t-color-bg-fill-brand-hover);
}

.input:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  background-color: var(--t-color-surface-background-disabled);
}

.input::placeholder {
  color: var(--t-color-text-secondary);
  opacity: 0.7;
}

/* Error state */
.error .input {
  border-color: var(--t-color-surface-background-critical);
}

.error .input:focus {
  box-shadow: 0 0 0 2px var(--t-color-surface-background-critical-hover);
}

/* Message and error text */
.message {
  font-family: var(--t-font-family-primary);
  font-size: var(--t-font-size-300);
  color: var(--t-color-text-secondary);
}

.errorMessage {
  font-family: var(--t-font-family-primary);
  font-size: var(--t-font-size-300);
  color: var(--t-color-surface-background-critical);
}

/* Size variants */
.sm .input {
  height: var(--t-size-800);
  font-size: var(--t-font-size-300);
  padding: var(--t-space-100) var(--t-space-200);
}

.md .input {
  height: var(--t-size-1000);
  font-size: var(--t-font-size-350);
  padding: var(--t-space-200) var(--t-space-300);
}

.lg .input {
  height: var(--t-size-1200);
  font-size: var(--t-font-size-400);
  padding: var(--t-space-200) var(--t-space-400);
}

/* RTL support */
:global([dir="rtl"]) .required {
  margin-inline-start: 0;
  margin-inline-end: var(--t-space-50);
}

/* Responsive adjustments */
@media (max-width: 640px) {
  .input {
    font-size: var(--t-font-size-300);
  }
}