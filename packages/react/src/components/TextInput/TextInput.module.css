/* TextInput Component Styles */

.container {
  display: flex;
  flex-direction: column;
  width: 100%;
}

.fullWidth {
  width: 100%;
}

/* Label styles */
.labelContainer {
  display: flex;
  align-items: center;
  margin-bottom: var(--t-space-200); /* Default 8px, overridden by size variants */
}

.label {
  font: var(--t-typography-body-md-default);
  color: var(--t-color-text-primary);
  position: relative;
  line-height: 1.5;
}

/* Line height trim for label */
.label::before,
.label::after {
  content: '';
  display: block;
  height: 0;
}

/* English font adjustment (smaller trim) */
.label::before {
  margin-top: -0.15em;
}

.label::after {
  margin-bottom: -0.25em;
}

/* Arabic font adjustment (larger trim) */
:global([dir="rtl"]) .label::before {
  margin-top: 0.1em;
}

:global([dir="rtl"]) .label::after {
  margin-bottom: -0.4em;
}

.required {
  color: var(--t-color-fill-critical);
  margin-inline-start: var(--t-space-50);
}

.optional {
  color: var(--t-color-text-secondary);
  font-size: var(--t-font-size-300);
  font-weight: var(--t-font-weight-regular);
  margin-left: var(--t-space-100);
}

/* RTL support for optional text margin */
:global([dir="rtl"]) .optional {
  margin-left: 0;
  margin-right: var(--t-space-100);
}

/* Input wrapper and flex positioning */
.inputWrapper {
  position: relative;
  display: flex;
  width: 100%;
  border-radius: var(--t-border-radius-200);
  border: 1px solid var(--t-color-border-secondary);
  background-color: var(--t-color-surface-primary);
  overflow: hidden;
  transition: all var(--t-duration-base) var(--t-easing-in-out);
}

.inputWrapper:hover {
  border-color: var(--t-color-border-hover);
    background-color: var(--t-color-surface-hover);

}

.inputWrapper:focus-within {
  border-color: var(--t-color-fill-brand);
  box-shadow: 0 0 0 1px var(--t-color-fill-brand-hover);
}

/* Base input styles */
.input {
  flex: 1;
  border: none;
  background-color: transparent;
  color: var(--t-color-text-primary);
  padding-block: var(--t-space-200);
  padding-inline: var(--t-space-300);
  font-family: var(--t-font-family-primary);
  font-size: var(--t-font-size-350);
  outline: none;
  width: 100%;
  position: relative;
  line-height: 1.5;
}

/* Line height trim for input field */
.input::before,
.input::after {
  content: '';
  display: block;
  height: 0;
}

/* English font adjustment (smaller trim) */
.input::before {
  margin-top: -0.15em;
}

.input::after {
  margin-bottom: -0.15em;
}

/* Arabic font adjustment (larger trim) */
:global([dir="rtl"]) .input::before {
  margin-top: 0.1em;
}

:global([dir="rtl"]) .input::after {
  margin-bottom: -0.25em;
}

/* RTL specific vertical centering for Arabic text */
:global([dir="rtl"]) .input {
  padding-top: calc(var(--t-space-200) + 2px);
  padding-bottom: calc(var(--t-space-200) - 2px);
}

/* Input states */
.input:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.inputWrapper.disabled {
  background-color: var(--t-color-surface-disabled);
  border-color: var(--t-color-border-disabled);
  opacity: 0.5;
}

.inputWrapper.readOnly {
  background-color: var(--t-color-surface-primary);
  border-color: var(--t-color-border-secondary);
  cursor: default;
  pointer-events: none;
}

.input::placeholder {
  color: var(--t-color-text-secondary);
  opacity: 0.7;
}

/* Prefix and suffix positioning with flex */
.prefix {
  display: flex;
  align-items: center;
  padding-inline-start: var(--t-space-300);
  color: var(--t-color-icon-secondary);

}

.suffix {
  display: flex;
  align-items: center;
  padding-inline-end: var(--t-space-300);
  color: var(--t-color-icon-secondary);
  /* Add 6px gap to the left of the suffix */
  /* margin-inline-start: var(--t-space-100);
  gap: var(--t-space-100); */
}

/* RTL vertical centering for prefix and suffix text */
:global([dir="rtl"]) .prefix {
  padding-top: 2px;
  padding-bottom: 0px;
}

:global([dir="rtl"]) .suffix {
  padding-top: 2px;
  padding-bottom: 0px;
}

/* Add padding adjustments for input with prefix/suffix */
.input.withPrefix {
  padding-inline-start: var(--t-space-150); /* 6px gap */
}

.input.withSuffix {
  padding-inline-end: var(--t-space-100); /* 6px gap */
}

/* Size variants with adjusted spacing */

/* XLarge - 56px height */
.sizeXlarge .inputWrapper {
  height: var(--t-size-1400); /* 56px */
  min-height: var(--t-size-1400);
}

.sizeXlarge .input {
  font: var(--t-typography-body-lg-default);
  padding-block: var(--t-space-400);
  padding-inline: var(--t-space-400);
}

.sizeXlarge .input.withPrefix {
  padding-inline-start: var(--t-space-150); /* 6px gap */
}

.sizeXlarge .input.withSuffix {
  padding-inline-end: var(--t-space-150); /* 6px gap */
}

.sizeXlarge .labelContainer {
  margin-bottom: var(--t-space-250); /* 10px */
}

.sizeXlarge .label {
  font: var(--t-typography-body-md-default);
}

.sizeXlarge .helpText,
.sizeXlarge .errorMessage {
  font: var(--t-typography-body-sm-default);
  margin-top: var(--t-space-250); /* 10px */
}

.sizeXlarge .prefix svg,
.sizeXlarge .suffix svg,
.sizeXlarge .prefix .iconButton svg {
  width: var(--t-size-600); /* 24px */
  height: var(--t-size-600); /* 24px */
}

/* RTL vertical centering for xlarge size */
:global([dir="rtl"]) .sizeXlarge .input {
  padding-top: calc(var(--t-space-400) + 2px);
  padding-bottom: calc(var(--t-space-400) - 2px);
}

/* Large - 48px height */
.sizeLarge .inputWrapper {
  height: var(--t-size-1200); /* 48px */
  min-height: var(--t-size-1200);
}

.sizeLarge .input {
  font: var(--t-typography-body-md-default);
  padding-block: var(--t-space-300);
  padding-inline: var(--t-space-400);
}

.sizeLarge .input.withPrefix {
  padding-inline-start: var(--t-space-150); /* 6px gap */
}

.sizeLarge .input.withSuffix {
  padding-inline-end: var(--t-space-150); /* 6px gap */
}

.sizeLarge .labelContainer {
  margin-bottom: var(--t-space-250); /* 10px */
}

.sizeLarge .label {
  font: var(--t-typography-body-sm-default);
}

.sizeLarge .helpText,
.sizeLarge .errorMessage {
  font: var(--t-typography-body-sm-default);
  margin-top: var(--t-space-250); /* 10px */
}

.sizeLarge .prefix svg,
.sizeLarge .suffix svg,
.sizeLarge .prefix .iconButton svg {
  width: var(--t-size-500); /* 20px */
  height: var(--t-size-500); /* 20px */
}

/* RTL vertical centering for large size */
:global([dir="rtl"]) .sizeLarge .input {
  padding-top: calc(var(--t-space-300) + 2px);
  padding-bottom: calc(var(--t-space-300) - 2px);
}

/* Medium - 40px height */
.sizeMedium .inputWrapper {
  height: var(--t-size-1000); /* 40px */
  min-height: var(--t-size-1000);
}

.sizeMedium .input {
  font: var(--t-typography-body-md-default);
  padding-block: var(--t-space-200);
  padding-inline: var(--t-space-300);
}

.sizeMedium .input.withPrefix {
  padding-inline-start: var(--t-space-150); /* 6px gap */
}

.sizeMedium .input.withSuffix {
  padding-inline-end: var(--t-space-150); /* 6px gap */
}

.sizeMedium .labelContainer {
  margin-bottom: var(--t-space-200); /* 8px */
}

.sizeMedium .label {
  font: var(--t-typography-body-sm-default);
}

.sizeMedium .helpText,
.sizeMedium .errorMessage {
  font: var(--t-typography-caption-lg-default);
  margin-top: var(--t-space-200); /* 8px */
}

.sizeMedium .prefix svg,
.sizeMedium .suffix svg,
.sizeMedium .prefix .iconButton svg {
  width: var(--t-size-400); /* 16px */
  height: var(--t-size-400); /* 16px */
}

/* RTL vertical centering for medium size */
:global([dir="rtl"]) .sizeMedium .input {
  padding-top: calc(var(--t-space-200) + 2px);
  padding-bottom: calc(var(--t-space-200) - 2px);
}

/* Small - 32px height */
.sizeSmall .inputWrapper {
  height: var(--t-size-800); /* 32px */
  min-height: var(--t-size-800);
}

.sizeSmall .input {
  font: var(--t-typography-body-sm-default);
  padding-block: var(--t-space-150);
  padding-inline: var(--t-space-300);
}

.sizeSmall .input.withPrefix {
  padding-inline-start: var(--t-space-150); /* 6px gap */
}

.sizeSmall .input.withSuffix {
  padding-inline-end: var(--t-space-150); /* 6px gap */
}

.sizeSmall .labelContainer {
  margin-bottom: var(--t-space-200); /* 8px */
}

.sizeSmall .label {
  font: var(--t-typography-caption-lg-default);
}

.sizeSmall .helpText,
.sizeSmall .errorMessage {
  font: var(--t-typography-caption-lg-default);
  margin-top: var(--t-space-200); /* 8px */
}

.sizeSmall .prefix svg,
.sizeSmall .suffix svg,
.sizeSmall .prefix .iconButton svg {
  width: var(--t-size-400); /* 16px */
  height: var(--t-size-400); /* 16px */
}

/* RTL vertical centering for small size */
:global([dir="rtl"]) .sizeSmall .input {
  padding-top: calc(var(--t-space-150) + 1px);
  padding-bottom: calc(var(--t-space-150) - 1px);
}

/* XSmall - 28px height */
.sizeXsmall .inputWrapper {
  height: var(--t-size-700); /* 28px */
  min-height: var(--t-size-700);
}

.sizeXsmall .input {
  font: var(--t-typography-caption-lg-default);
  padding-block: var(--t-space-100);
  padding-inline: var(--t-space-300);
}

.sizeXsmall .input.withPrefix {
  padding-inline-start: var(--t-space-150); /* 6px gap */
}

.sizeXsmall .input.withSuffix {
  padding-inline-end: var(--t-space-150); /* 6px gap */
}

.sizeXsmall .labelContainer {
  margin-bottom: var(--t-space-200); /* 8px */
}

.sizeXsmall .label {
  font: var(--t-typography-caption-lg-default);
}

.sizeXsmall .helpText,
.sizeXsmall .errorMessage {
  font: var(--t-typography-caption-lg-default);
  margin-top: var(--t-space-200); /* 8px */
}

.sizeXsmall .prefix svg,
.sizeXsmall .suffix svg,
.sizeXsmall .prefix .iconButton svg {
  width: var(--t-size-400); /* 16px */
  height: var(--t-size-400); /* 16px */
}

/* RTL vertical centering for xsmall size */
:global([dir="rtl"]) .sizeXsmall .input {
  padding-top: calc(var(--t-space-100) + 1px);
  padding-bottom: calc(var(--t-space-100) - 1px);
}

/* Icon button (for clear, password toggle, etc.) */
.iconButton {
  display: flex;
  align-items: center;
  justify-content: center;
  background: none;
  border: none;
  color: var(--t-color-icon-secondary);
  cursor: pointer;
  padding: var(--t-space-50);
  border-radius: var(--t-border-radius-100);
  transition: background-color var(--t-duration-fast) var(--t-easing-in-out);
}

.iconButton:hover {
  background-color: var(--t-color-surface-hover);
}

.iconButton:active {
  background-color: var(--t-color-surface-active);
}

/* Error state */
.error .inputWrapper {
  border-color: var(--t-color-fill-critical);
  background-color: var(--t-color-fill-critical-secondary);
}

.error .inputWrapper:hover {
  background-color: var(--t-color-fill-critical-secondary-hover);
  border-color: var(--t-color-border-critical-hover);
}

.error .inputWrapper:focus-within {
  box-shadow: 0 0 0 2px var(--t-color-fill-critical-secondary);
}

.errorMessage {
  display: flex;
  align-items: center;
  color: var(--t-color-text-critical);
  font: var(--t-typography-body-sm-default);
  margin-top: var(--t-space-200); /* Default 8px, overridden by size variants */
  position: relative;
  line-height: 1.5;
}

/* Line height trim for error message */
.errorMessage::before,
.errorMessage::after {
  content: '';
  display: block;
  height: 0;
}

/* English font adjustment (smaller trim) */
.errorMessage::before {
  margin-top: -0.15em;
}

.errorMessage::after {
  margin-bottom: -0.15em;
}

/* Arabic font adjustment (larger trim) */
:global([dir="rtl"]) .errorMessage::before {
  margin-top: 0.1em;
}

:global([dir="rtl"]) .errorMessage::after {
  margin-bottom: -0.25em;
}

.errorIcon {
  color: var(--t-color-icon-critical);
  margin-right: var(--t-space-200); /* Default 8px */
  flex-shrink: 0;
}

/* RTL support for error icon */
:global([dir="rtl"]) .errorIcon {
  margin-right: 0;
  margin-left: var(--t-space-200); /* Default 8px */
}

/* Size-specific error icon margins */

/* XLarge - 8px margin, 20px icon */
.sizeXlarge .errorIcon {
  margin-right: var(--t-space-200); /* 8px */
  width: var(--t-size-500); /* 20px */
  height: var(--t-size-500); /* 20px */
}

:global([dir="rtl"]) .sizeXlarge .errorIcon {
  margin-right: 0;
  margin-left: var(--t-space-200); /* 8px */
}

/* Large - 6px margin, 20px icon */
.sizeLarge .errorIcon {
  margin-right: var(--t-space-150); /* 6px */
  width: var(--t-size-500); /* 20px */
  height: var(--t-size-500); /* 20px */
}

:global([dir="rtl"]) .sizeLarge .errorIcon {
  margin-right: 0;
  margin-left: var(--t-space-150); /* 6px */
}

/* Medium - 6px margin, 16px icon */
.sizeMedium .errorIcon {
  margin-right: var(--t-space-150); /* 6px */
  width: var(--t-size-400); /* 16px */
  height: var(--t-size-400); /* 16px */
}

:global([dir="rtl"]) .sizeMedium .errorIcon {
  margin-right: 0;
  margin-left: var(--t-space-150); /* 6px */
}

/* Small - 6px margin, 16px icon */
.sizeSmall .errorIcon {
  margin-right: var(--t-space-150); /* 6px */
  width: var(--t-size-400); /* 16px */
  height: var(--t-size-400); /* 16px */
}

:global([dir="rtl"]) .sizeSmall .errorIcon {
  margin-right: 0;
  margin-left: var(--t-space-150); /* 6px */
}

/* XSmall - 6px margin, 16px icon */
.sizeXsmall .errorIcon {
  margin-right: var(--t-space-150); /* 6px */
  width: var(--t-size-400); /* 16px */
  height: var(--t-size-400); /* 16px */
}

:global([dir="rtl"]) .sizeXsmall .errorIcon {
  margin-right: 0;
  margin-left: var(--t-space-150); /* 6px */
}

/* Help text */
.helpText {
  font: var(--t-typography-body-sm-default);
  color: var(--t-color-text-secondary);
  margin-top: var(--t-space-200); /* Default 8px, overridden by size variants */
  position: relative;
  line-height: 1.5;
}


/* Line height trim for help text */
.helpText::before,
.helpText::after {
  content: '';
  display: block;
  height: 0;
}

/* English font adjustment (smaller trim) */
.helpText::before {
  margin-top: -0.15em;
}

.helpText::after {
  margin-bottom: -0.15em;
}

/* Arabic font adjustment (larger trim) */
:global([dir="rtl"]) .helpText::before {
  margin-top: 0.1em;
}

:global([dir="rtl"]) .helpText::after {
  margin-bottom: -0.25em;
}

/* Responsive adjustments */
@media (max-width: 640px) {
  .input {
    font-size: var(--t-font-size-300);
  }
}
