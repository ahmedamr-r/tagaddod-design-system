.overlay {
  background-color: var(--t-color-overlay, rgba(0, 0, 0, 0.4));
  position: fixed;
  inset: 0;
  z-index: var(--t-z-index-modal-overlay, 999);
  
  /* Animation for overlay */
  animation: overlayShow 150ms cubic-bezier(0.16, 1, 0.3, 1);
}

.content {
  background-color: var(--t-color-bg, white);
  border-radius: var(--t-border-radius-200, 8px);
  overflow: hidden;
  box-shadow: var(--t-shadow-400, 0 10px 25px -5px rgba(0, 0, 0, 0.1));
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: var(--t-modal-width, 450px);
  max-width: 90vw;
  max-height: 85vh;
  display: flex;
  flex-direction: column;
  z-index: var(--t-z-index-modal, 1000);
  
  /* Animation for content */
  animation: contentShow 300ms cubic-bezier(0.16, 1, 0.3, 1);
  will-change: transform, opacity;
}

.content.rtl {
  direction: rtl;
}

.content.fullscreen {
  width: 100vw;
  max-width: 100vw;
  height: 100vh;
  max-height: 100vh;
  border-radius: 0;
}

/* Width variants */
.content.widthSmall {
  width: 26.5rem; /* 424px */
}

.content.widthMedium {
  width: 38.75rem; /* 620px */
}

.content.widthLarge {
  width: 61.25rem; /* 980px */
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--t-space-400, 16px);
  background-color: var(--t-color-bg-light);
  border-bottom: 1px solid var(--t-color-border, #EFEFEF);
}

/* RTL Header positioning - title on right, close button on left */
:global([dir="rtl"]) .header {
  direction: rtl;
}

.title {
  font: var(--t-typography-heading-sm);
  color: var(--t-color-text-primary, #000);
  margin: 0;
  position: relative;
  line-height: 1.5;
}

/* Line height trim for title */
.title::before,
.title::after {
  content: '';
  display: block;
  height: 0;
}

/* English font adjustment (smaller trim) */
.title::before {
  margin-top: -0.15em;
}

.title::after {
  margin-bottom: -0.15em;
}

/* Arabic font adjustment (larger trim) */
:global([dir="rtl"]) .title::before {
  margin-top: 0.1em;
}

:global([dir="rtl"]) .title::after {
  margin-bottom: -0.25em;
}

/* .closeButton {
  background: transparent;
  border: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 28px;
  height: 28px;
  border-radius: 50%;
  padding: 0;
  color: var(--t-color-text-secondary, #666);
  transition: background-color 150ms ease-in-out, color 150ms ease-in-out;
} */

.closeButton:hover {
  background-color: var(--t-color-bg-hover, #f5f5f5);
  color: var(--t-color-text-primary, #333);
}

.body {
  overflow-y: auto;
  flex: 1;
}

.footer {
  padding: var(--t-space-400, 16px);
  display: flex;
  border-top: 1px solid var(--t-color-border, #EFEFEF);
  gap: var(--t-space-200, 8px);
}

/* Footer variants */
.footerCancelAndActions {
  justify-content: space-between;
}

.footerSwapAndActions {
  justify-content: space-between;
}

.footerActionsOnly {
  justify-content: flex-end;
}

/* Footer sections */
.footerLeft {
  display: flex;
  gap: var(--t-space-200, 8px);
  align-items: center;
}

.footerRight {
  display: flex;
  gap: var(--t-space-200, 8px);
  align-items: center;
}

.footerSwapArea {
  display: flex;
  align-items: center;
  color: var(--t-color-text-secondary, #666);
  font-size: var(--t-font-size-body-sm, 14px);
  position: relative;
  line-height: 1.5;
}

/* Line height trim for swap area */
.footerSwapArea::before,
.footerSwapArea::after {
  content: '';
  display: block;
  height: 0;
}

.footerSwapArea::before {
  margin-top: -0.15em;
}

.footerSwapArea::after {
  margin-bottom: -0.15em;
}

:global([dir="rtl"]) .footerSwapArea::before {
  margin-top: 0.1em;
}

:global([dir="rtl"]) .footerSwapArea::after {
  margin-bottom: -0.25em;
}

/* RTL Footer positioning - actions on left, cancel on right */
:global([dir="rtl"]) .footer {
  /* direction: rtl; */
}

:global([dir="rtl"]) .footer .footerLeft {
  order: 2 !important; /* In RTL, left area (cancel) moves to right side */
}

:global([dir="rtl"]) .footer .footerRight {
  order: 1 !important; /* In RTL, right area (actions) moves to left side */
  flex-direction: row-reverse; /* Reverse button order within actions: primary then secondary */
}

/* Ensure RTL works for all footer variants */
:global([dir="rtl"]) .footerCancelAndActions .footerLeft,
:global([dir="rtl"]) .footerSwapAndActions .footerLeft {
  order: 2 !important;
}

:global([dir="rtl"]) .footerCancelAndActions .footerRight,
:global([dir="rtl"]) .footerSwapAndActions .footerRight {
  order: 1 !important;
  flex-direction: row-reverse;
}

:global([dir="rtl"]) .footerActionsOnly {
  justify-content: flex-start !important; /* In RTL, actions should be on the left */
}

/* Keyframe animations */
@keyframes overlayShow {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes contentShow {
  from {
    opacity: 0;
    transform: translate(-50%, -48%) scale(0.96);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

@keyframes contentShowRtl {
  from {
    opacity: 0;
    transform: translate(-50%, -48%) scale(0.96);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

/* Dialog close animation */
@media (prefers-reduced-motion: no-preference) {
  [data-state="closed"].overlay {
    animation: overlayHide 150ms ease-in forwards;
  }
  
  [data-state="closed"].content {
    animation: contentHide 150ms ease-in forwards;
  }
  
  [data-state="closed"].content.rtl {
    animation: contentHideRtl 150ms ease-in forwards;
  }
}

@keyframes overlayHide {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes contentHide {
  from {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
  to {
    opacity: 0;
    transform: translate(-50%, -48%) scale(0.96);
  }
}

@keyframes contentHideRtl {
  from {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
  to {
    opacity: 0;
    transform: translate(-50%, -48%) scale(0.96);
  }
}