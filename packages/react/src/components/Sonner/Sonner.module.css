/* Design tokens from Figma */
:root {
  --sonner-error-bg: #d51e25;
  --sonner-success-bg: #00ae61;
  --sonner-default-bg: #ffffff;
  --sonner-icon-bg-overlay: rgba(255, 255, 255, 0.2);
  --sonner-icon-bg-default: #f9f9fa;
  --sonner-text-on-bg: #ffffff;
  --sonner-text-primary: #16161d;
  --sonner-text-secondary: #7d8096;
  --sonner-shadow: 0px 8px 16px -4px rgba(26, 26, 26, 0.22);
  --sonner-border-radius: 8px;
  --sonner-border-radius-small: 4px;
  --sonner-space-12: 12px;
  --sonner-space-8: 8px;
  --sonner-space-3: 3px;
  --sonner-space-2: 2px;
  --sonner-icon-size: 20px;
}

/* Toaster Container */
.toaster {
  font-family: 'Outfit', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
  z-index: var(--t-z-toast, 999999);
}

/* Toast Component - Base styles matching Figma */
.toast {
  display: flex;
  flex-direction: row;
  align-items: center;
  min-width: 280px;
  max-width: 480px;
  padding: var(--sonner-space-12);
  background-color: var(--sonner-default-bg);
  border-radius: var(--sonner-border-radius);
  box-shadow: var(--sonner-shadow);
  position: relative;
  gap: var(--sonner-space-8);
  transition: all 200ms ease-out;
}

/* Main content layout - icon and text */
.mainContent {
  display: flex;
  align-items: center;
  gap: var(--sonner-space-3);
  flex: 1;
  min-width: 0;
}

/* Icon container with optional background */
.iconContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  width: var(--sonner-icon-size);
  height: var(--sonner-icon-size);
  flex-shrink: 0;
}

.iconWithBackground {
  background-color: var(--sonner-icon-bg-default);
  border-radius: var(--sonner-border-radius-small);
  padding: var(--sonner-space-12);
  width: auto;
  height: auto;
}

.icon {
  width: var(--sonner-icon-size);
  height: var(--sonner-icon-size);
  flex-shrink: 0;
}

.spinning {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

/* Text content */
.textContent {
  flex: 1;
  min-width: 0;
}

.title {
  font-family: 'Outfit', sans-serif;
  font-weight: 500;
  font-size: 16px;
  line-height: 1.5;
  color: var(--sonner-text-primary);
  margin: 0;
  margin-bottom: var(--sonner-space-2);
}

.description {
  font-family: 'Outfit', sans-serif;
  font-weight: 400;
  font-size: 14px;
  line-height: 1.5;
  color: var(--sonner-text-secondary);
  margin: 0;
}

/* Actions container */
.actions {
  display: flex;
  align-items: center;
  gap: var(--sonner-space-8);
  flex-shrink: 0;
}

/* Close button */
.closeButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: var(--sonner-icon-size);
  height: var(--sonner-icon-size);
  background: none;
  border: none;
  cursor: pointer;
  border-radius: var(--sonner-border-radius-small);
  transition: all 200ms ease-out;
  color: var(--sonner-text-primary);
}

.closeButton:hover {
  background-color: rgba(0, 0, 0, 0.05);
}

.closeButton:active {
  background-color: rgba(0, 0, 0, 0.1);
}

.closeIcon {
  width: var(--sonner-icon-size);
  height: var(--sonner-icon-size);
  stroke-width: 2;
}

/* Button base styles */
.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 8px 16px;
  border-radius: var(--sonner-border-radius-small);
  font-family: 'Outfit', sans-serif;
  font-size: 14px;
  font-weight: 500;
  line-height: 1.5;
  border: 1px solid transparent;
  cursor: pointer;
  transition: all 200ms ease-out;
}

.actionButton {
  background-color: var(--sonner-text-primary);
  color: var(--sonner-default-bg);
}

.actionButton:hover {
  background-color: rgba(22, 22, 29, 0.9);
}

.actionButton:active {
  background-color: rgba(22, 22, 29, 0.8);
}

.cancelButton {
  background-color: transparent;
  color: var(--sonner-text-secondary);
  border-color: rgba(22, 22, 29, 0.2);
}

.cancelButton:hover {
  background-color: rgba(22, 22, 29, 0.05);
}

.cancelButton:active {
  background-color: rgba(22, 22, 29, 0.1);
}

.bottomActions {
  display: flex;
  gap: var(--sonner-space-8);
  margin-top: var(--sonner-space-8);
  justify-content: flex-end;
}

/* Toast type variants - Error */
.error {
  background-color: var(--sonner-error-bg);
}

.error .title {
  color: var(--sonner-text-on-bg);
}

.error .description {
  color: var(--sonner-text-on-bg);
}

.error .iconWithBackground {
  background-color: var(--sonner-icon-bg-overlay);
}

.error .icon {
  color: var(--sonner-text-on-bg);
}

.error .closeButton {
  color: var(--sonner-text-on-bg);
}

.error .closeButton:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

.error .closeButton:active {
  background-color: rgba(255, 255, 255, 0.2);
}

/* Toast type variants - Success */
.success {
  background-color: var(--sonner-success-bg);
}

.success .title {
  color: var(--sonner-text-on-bg);
}

.success .description {
  color: var(--sonner-text-on-bg);
}

.success .iconWithBackground {
  background-color: var(--sonner-icon-bg-overlay);
}

.success .icon {
  color: var(--sonner-text-on-bg);
}

.success .closeButton {
  color: var(--sonner-text-on-bg);
}

.success .closeButton:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

.success .closeButton:active {
  background-color: rgba(255, 255, 255, 0.2);
}

/* Toast type variants - Info/Warning/Loading/Custom use default styles */
.info,
.warning,
.loading,
.custom {
  background-color: var(--sonner-default-bg);
}

/* RTL Support */
:global([dir="rtl"]) .toast {
  flex-direction: row-reverse;
}

:global([dir="rtl"]) .mainContent {
  flex-direction: row-reverse;
}

:global([dir="rtl"]) .textContent {
  text-align: right;
}

:global([dir="rtl"]) .actions {
  flex-direction: row-reverse;
}

:global([dir="rtl"]) .bottomActions {
  justify-content: flex-start;
}

/* Responsive design */
@media (max-width: 480px) {
  .toast {
    min-width: 280px;
    max-width: calc(100vw - 32px);
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .toast {
    border: 2px solid currentColor;
  }
  
  .button {
    border: 2px solid currentColor;
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .toast {
    transition: none;
  }
  
  .button {
    transition: none;
  }
  
  .spinning {
    animation: none;
  }
} 