/* Design tokens mapped to system tokens */
:root {
  --sonner-error-bg: var(--t-color-fill-critical);
  --sonner-success-bg: var(--t-color-fill-success);
  --sonner-default-bg: var(--t-color-surface-primary);
  --sonner-icon-bg-overlay: var(--t-color-overlay-light-20);
  --sonner-icon-bg-default: var(--t-color-surface-hover);
  --sonner-text-on-bg: var(--t-color-text-on-fill);
  --sonner-text-primary: var(--t-color-text-primary);
  --sonner-text-secondary: var(--t-color-text-secondary);
  --sonner-shadow: 0px 8px 16px -4px rgba(26, 26, 26, 0.22); /* No exact match in tokens */
  --sonner-border-radius: var(--t-border-radius-200);
  --sonner-border-radius-small: var(--t-border-radius-100);
  --sonner-space-12: var(--t-space-300);
  --sonner-space-8: var(--t-space-200);
  --sonner-space-3: var(--t-space-150);
  --sonner-space-2: var(--t-space-100);
  --sonner-icon-size: var(--t-size-500);
  --sonner-close-icon-size: var(--t-size-600);
}

/* Toaster Container */
.toaster {
  font-family: var(--t-font-family-primary);
  z-index: var(--t-z-toast);
}

/* Target Sonner library's built-in close button */
.toaster :global([data-close-button]) {
  width: var(--sonner-close-icon-size) !important;
  height: var(--sonner-close-icon-size) !important;
}

.toaster :global([data-close-button] svg) {
  width: var(--sonner-close-icon-size) !important;
  height: var(--sonner-close-icon-size) !important;
}

/* Toast Component - Base styles matching Figma */
.toast {
  display: flex;
  flex-direction: row;
  align-items: center;
  min-width: 17.5rem;
  max-width: 30rem;
  min-height: var(--t-size-1200);
  padding: var(--t-space-300);
  background-color: var(--t-color-surface-primary);
  border-radius: var(--t-border-radius-200);
  box-shadow: var(--sonner-shadow);
  position: relative;
  gap: var( --t-space-500);
  transition: all var(--t-duration-fast) var(--t-easing-in-out);
}

/* Main content layout - icon and text */
.mainContent {
  display: flex;
  align-items: center;
  gap: var(--t-space-300);
  flex: 1;
  min-width: 0;
}

/* Icon container with optional background */
.iconContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  width: var(--sonner-icon-size);
  height: var(--sonner-icon-size);
  flex-shrink: 0;
}

.iconWithBackground {
  background-color: var(--sonner-icon-bg-default);
  border-radius: var(--t-border-radius-100);
  padding: var(--sonner-space-12);
  width: auto;
  height: auto;
}

.icon {
  width: var(--sonner-icon-size);
  height: var(--sonner-icon-size);
  flex-shrink: 0;
  color: var(--t-color-icon-primary);
}

.icon svg {
  color: inherit;
  stroke: currentColor;
}

.spinning {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

/* Text content */
.textContent {
  flex: 1;
  min-width: 0;
}

.title {
  font: var(--t-typography-body-md-medium);
  color: var(--t-color-text-primary);
  margin: 0;
  margin-bottom: var(--t-space-50);
}

.description {
  font: var(--t-typography-body-sm-default);
  color: var(--t-color-text-secondary);
  margin: 0;
}

/* Actions container */
.actions {
  display: flex;
  align-items: center;
  gap: var(--sonner-space-8);
  flex-shrink: 0;
}

/* Close button */
.closeButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2rem;
  height: 2rem;
  background: none;
  border: none;
  cursor: pointer;
  border-radius: var(--sonner-border-radius-small);
  transition: all var(--t-duration-fast) var(--t-easing-in-out);
  color: var(--sonner-text-primary);
}

.closeButton:hover {
  background-color: var(--t-color-surface-hover);
}

.closeButton:active {
  background-color: var(--t-color-surface-active);
}

.closeIcon {
  width: var(--sonner-close-icon-size);
  height: var(--sonner-close-icon-size);
  stroke-width: var(--t-border-width-icon);
}

/* Button base styles */
.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: var(--t-space-200) var(--t-space-400);
  border-radius: var(--sonner-border-radius-small);
  font: var(--t-typography-body-sm-medium);
  border: var(--t-border-width-50) solid transparent;
  cursor: pointer;
  transition: all var(--t-duration-fast) var(--t-easing-in-out);
}

.actionButton {
  background-color: var(--t-color-fill-brand);
  color: var(--t-color-text-on-fill);
}

.actionButton:hover {
  background-color: var(--t-color-fill-brand-hover);
}

.actionButton:active {
  background-color: var(--t-color-fill-brand-active);
}

.cancelButton {
  background-color: transparent;
  color: var(--t-color-text-secondary);
  border-color: var(--t-color-border-secondary);
}

.cancelButton:hover {
  background-color: var(--t-color-surface-hover);
}

.cancelButton:active {
  background-color: var(--t-color-surface-active);
}

.bottomActions {
  display: flex;
  gap: var(--sonner-space-8);
  margin-top: var(--sonner-space-8);
  justify-content: flex-end;
}

/* Toast type variants - Error */
.error {
  background-color: var(--sonner-error-bg);
}

.error .title {
  color: var(--sonner-text-on-bg);
}

.error .description {
  color: var(--sonner-text-on-bg);
}

.error .iconWithBackground {
  background-color: var(--sonner-icon-bg-overlay);
}

.error .icon {
  color: var(--t-color-icon-on-fill);
}

.error .closeButton {
  color: var(--sonner-text-on-bg);
}

.error .closeButton:hover {
  background-color: var(--t-color-overlay-light-20);
}

.error .closeButton:active {
  background-color: var(--t-color-overlay-light-20);
}

/* Toast type variants - Success */
.success {
  background-color: var(--sonner-success-bg);
}

.success .title {
  color: var(--sonner-text-on-bg);
}

.success .description {
  color: var(--sonner-text-on-bg);
}

.success .iconWithBackground {
  background-color: var(--sonner-icon-bg-overlay);
}

.success .icon {
  color: var(--t-color-icon-on-fill);
}

.success .closeButton {
  color: var(--sonner-text-on-bg);
}

.success .closeButton:hover {
  background-color: var(--t-color-overlay-light-20);
}

.success .closeButton:active {
  background-color: var(--t-color-overlay-light-20);
}

/* Toast type variants - Info/Warning/Loading/Custom use default styles */
.info,
.warning,
.loading,
.custom {
  background-color: var(--sonner-default-bg);
}

/* RTL Support */
:global([dir="rtl"]) .toast {
  flex-direction: row-reverse;
}

:global([dir="rtl"]) .mainContent {
  flex-direction: row-reverse;
}

:global([dir="rtl"]) .textContent {
  text-align: right;
}

:global([dir="rtl"]) .actions {
  flex-direction: row-reverse;
}

:global([dir="rtl"]) .bottomActions {
  justify-content: flex-start;
}

/* Responsive design */
@media (max-width: 480px) {
  .toast {
    min-width: 280px;
    max-width: calc(100vw - var(--t-space-800));
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .toast {
    border: var(--t-border-width-100) solid currentColor;
  }
  
  .button {
    border: var(--t-border-width-100) solid currentColor;
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .toast {
    transition: none;
  }
  
  .button {
    transition: none;
  }
  
  .spinning {
    animation: none;
  }
} 