/* Tabs Component Styles */

/* Root styles */
.tabsRoot {
  display: flex;
  flex-direction: column;
  width: 100%;
  box-sizing: border-box;
  font-family: var(--t-font-family-primary);
}

/* Base TabsList styles - shared properties only */
.tabsList {
  display: flex;
  position: relative;
  align-items: normal; /* Center align items properly */
}

/* Vertical orientation - base styles */
.tabsRoot[data-orientation="vertical"] .tabsList {
  flex-direction: column;
  align-items: flex-start;
  margin-right: var(--t-space-400);
  padding-right: var(--t-space-200);
}

/* Vertical orientation - Primary variant */
.tabsRoot[data-orientation="vertical"] .variantPrimary .tabsList {
  border-bottom: none;
  border-right: 1px solid var(--t-color-border-secondary);
}

/* Vertical orientation - Secondary variant */
.tabsRoot[data-orientation="vertical"] .variantSecondary .tabsList {
  border-bottom: none;
  border-right: none;
}

/* Fitted styles */
.fitted .tabsList {
  width: 100%;
}

.fitted .tabsTrigger {
  flex: 1;
}

/* Base TabsTrigger styles - shared properties only */
.tabsTrigger {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  margin: 0;
  background: transparent;
  border: none;
  cursor: pointer;
  transition: all var(--t-duration-base) var(--t-easing-in-out);
  position: relative;
  outline: none;
  appearance: none;
  -webkit-tap-highlight-color: transparent;
}

/* Ensure tab content is above the hover background */
.tabsLabel, .tabsIcon, .tabsBadge {
  position: relative;
  z-index: 1;
}

.tabsTrigger:focus-visible {
  box-shadow: 0 0 0 2px var(--t-color-border-brand);
  border-radius: var(--t-border-radius-100);
}

/* ========================================
   VARIANT: PRIMARY (Underlined tabs)
   Height: 56px (3.5rem)
   ======================================== */

.variantPrimary .tabsList {
  background-color: var(--t-color-surface-primary); /* White background for primary */
  border-bottom: 1px solid var(--t-color-border-secondary);
}

.variantPrimary .tabsTrigger {
  
  gap: var(--t-space-100);
  padding: var(--t-space-300) var(--t-space-400);
  height: var(--t-size-1400); /* 56px - Fixed height for primary tabs */
  font: var(--t-typography-body-sm-medium);
  color: var(--t-color-text-secondary);
  margin-bottom: -1px; /* To overlap the bottom border */
}

/* Create a before element for hover effect in primary variant */
.variantPrimary .tabsTrigger::before {
  content: '';
  position: absolute;
  top: 11px;  /* Adjusted to give slight padding */
  left: 4px;  /* Adjusted to give slight padding */
  right: 4px;  /* Adjusted to give slight padding */
  bottom: 11px;  /* Adjusted to not overlap with the underline */
  border-radius: var(--t-border-radius-200);
  transition: all var(--t-duration-base) var(--t-easing-in-out);
  z-index: 0;
}

.variantPrimary .tabsTrigger:hover {
  color: var(--t-color-text-primary);
}

.variantPrimary .tabsTrigger:hover::before,
.variantPrimary .tabsTriggerHover::before {
  background-color: var(--t-color-fill-hover);
}

.variantPrimary .tabsTrigger[data-state="active"] {
  color: var(--t-color-text-link);
  font: var(--t-typography-body-sm-semibold);
}

.variantPrimary .tabsTrigger[data-state="active"]::before {
  background-color: transparent; /* No background for active tab */
}

/* Typography for primary variant */
.variantPrimary .tabsLabel, 
.variantPrimary .tabsIcon, 
.variantPrimary .tabsBadge {
  font: var(--t-typography-body-sm-medium);
}

.variantPrimary .tabsTrigger[data-state="active"]::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 2px;
  background-color: var(--t-color-border-brand);
  border-radius: var(--t-border-radius-100) var(--t-border-radius-100) 0 0;
  animation: slideIn 250ms var(--t-easing-in-out) forwards;
  transform-origin: left;
}

@keyframes slideIn {
  from {
    transform: scaleX(0);
  }
  to {
    transform: scaleX(1);
  }
}

/* Style for RTL - removed duplicate rule, will be handled at the end of file */

/* ========================================
   VARIANT: SECONDARY (Box tabs)
   Height: 28px (1.75rem)
   ======================================== */

.variantSecondary .tabsList {
  background-color: transparent; /* Transparent background for secondary */
  border-bottom: none;
  gap: var(--t-space-200);
}

.variantSecondary .tabsTrigger {
  gap: var(--t-space-100);
  border-radius: var(--t-border-radius-200);
  border: 1px solid var(--t-color-border-primary);
  padding: var(--t-space-100) var(--t-space-300);
  height: var(--t-size-700); /* 28px - Fixed height for secondary tabs */
  font: var(--t-typography-body-sm-medium);
  color: var(--t-color-text-secondary);
  transition: all var(--t-duration-base) var(--t-easing-in-out);
}

/* Create a before element for hover effect in secondary variant */
.variantSecondary .tabsTrigger::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: var(--t-border-radius-200);
  transition: all var(--t-duration-base) var(--t-easing-in-out);
  z-index: 0;
}

.variantSecondary .tabsTrigger:hover {
  color: var(--t-color-text-primary);
}

.variantSecondary .tabsTrigger:hover::before,
.variantSecondary .tabsTriggerHover::before {
  background-color: var( --t-color-fill-hover);
  border-color: var( --t-color-border-hover);
}

.variantSecondary .tabsTrigger[data-state="active"] {
  color: var(--t-color-text-link);
  font: var(--t-typography-body-sm-semibold);
  background-color: var(--t-color-fill-brand-secondary);
  border-color: var(--t-color-border-subtle);
  animation: scaleIn 250ms var(--t-easing-in-out) forwards;
}

.variantSecondary .tabsTrigger[data-state="active"]::before {
  background-color: transparent; /* No hover background on active secondary tabs */
}

/* Typography for secondary variant */
.variantSecondary .tabsLabel, 
.variantSecondary .tabsIcon, 
.variantSecondary .tabsBadge {
  font: var(--t-typography-body-sm-medium);
}

@keyframes scaleIn {
  from {
    transform: scale(0.95);
  }
  to {
    transform: scale(1);
  }
}

/* TabsContent styles */
.tabsContent {
  padding: var(--t-space-300) 0;
  outline: none;
  animation: fadeIn 300ms var(--t-easing-in-out);
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(4px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Line height text elements */
.tabsLabel {
  position: relative;
  line-height: 1.5;
}

/* Line height trim for all languages */
.tabsLabel::before,
.tabsLabel::after {
  content: '';
  display: block;
  height: 0;
}

/* English font adjustment (smaller trim) */
.tabsLabel::before {
  margin-top: -0.15em;
}

.tabsLabel::after {
  margin-bottom: -0.15em;
}

/* Arabic font adjustment (larger trim) */
:global([dir="rtl"]) .tabsLabel::before {
  margin-top: 0.1em;
}

:global([dir="rtl"]) .tabsLabel::after {
  margin-bottom: -0.25em;
}

/* Icon styles */
.tabsIcon {
  display: flex;
  align-items: center;
  margin-right: var(--t-space-100);
}

:global([dir="rtl"]) .tabsIcon {
  margin-right: 0;
  margin-left: var(--t-space-100);
}

/* Badge styles - base */
.tabsBadge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  min-width: var(--t-size-500);
  height: var(--t-size-500);
  padding: 2px var(--t-space-250);
  font: var(--t-typography-caption-lg-medium);
  border-radius: var(--t-border-radius-full);
  margin-left: var(--t-space-200); /* Increased from space-100 to match Figma */
  line-height: 1;
  transition: all var(--t-duration-base) var(--t-easing-in-out);
}

:global([dir="rtl"]) .tabsBadge {
  margin-left: 0;
  margin-right: var(--t-space-100); 
  padding-top: 0.4rem;
  /* Increased from space-100 to match Figma */
}





/* Badge in default (rest) state */
.tabsTrigger .tabsBadge {
  color: var(--t-color-text-secondary);
  background-color: var(--t-color-fill-hover); /* grey background in rest state */
}

/* Explicit hover style for stories */
.tabsTriggerHover, 
.tabsTriggerHover:focus {
  color: var(--t-color-text-primary);
}

.tabsTriggerHover::before {
  background-color: var(--t-color-fill-hover);
}

/* Badge in hover state */
.tabsTrigger:hover .tabsBadge,
.tabsTriggerHover .tabsBadge {
  color: var(--t-color-text-primary);
  background-color: var(--t-color-fill-active); /* darker grey in hover state */
}

/* Badge in active state */
.tabsTrigger[data-state="active"] .tabsBadge {
  color: var(--t-color-text-link);
  background-color: var(--t-color-fill-brand-secondary); /* blue background in active state */
}

/* Badge in disabled state */
.tabsTrigger[data-disabled] .tabsBadge {
color: var(--t-color-text-secondary);
background-color: var(--t-color-background-primary); /* light grey in disabled state */
  opacity: 0.7; /* Match the opacity of the tab itself */
}

/* Count specific styles */
.count2 .tabsList,
.count3 .tabsList,
.count4 .tabsList,
.count5 .tabsList,
.count6 .tabsList {
  overflow-x: auto;
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* IE and Edge */
}

.count2 .tabsList::-webkit-scrollbar,
.count3 .tabsList::-webkit-scrollbar,
.count4 .tabsList::-webkit-scrollbar,
.count5 .tabsList::-webkit-scrollbar,
.count6 .tabsList::-webkit-scrollbar {
  display: none; /* Chrome, Safari and Opera */
}

/* States */
.tabsTrigger[data-disabled] {
  opacity: 0.7;
  cursor: not-allowed;
  color: var(--t-color-text-disabled);
}

.tabsTrigger[data-disabled]::before {
  background-color: transparent;
}

/* Focus states */
@media (prefers-reduced-motion: no-preference) {
  .tabsTrigger:focus-visible {
    transition: box-shadow 150ms ease-out;
  }
  
  /* Keep animations only for users without reduced motion preference */
  .variantPrimary .tabsTrigger[data-state="active"]::after {
    animation: slideIn 250ms var(--t-easing-in-out) forwards;
  }
  
  .variantSecondary .tabsTrigger[data-state="active"] {
    animation: scaleIn 250ms var(--t-easing-in-out) forwards;
  }
  
  .tabsContent {
    animation: fadeIn 300ms var(--t-easing-in-out);
  }
}

/* For users who prefer reduced motion, disable animations */
@media (prefers-reduced-motion: reduce) {
  .variantPrimary .tabsTrigger[data-state="active"]::after {
    animation: none;
    transform: scaleX(1);
  }
  
  .variantSecondary .tabsTrigger[data-state="active"] {
    animation: none;
    transform: scale(1);
  }
  
  .tabsContent {
    animation: none;
    opacity: 1;
    transform: translateY(0);
  }
}

/* RTL handling for primary variant */
:global([dir="rtl"]) .variantPrimary .tabsTrigger[data-state="active"]::after {
  transform-origin: right;
}

/* Vertical orientation for primary variant */
.tabsRoot[data-orientation="vertical"] .variantPrimary .tabsTrigger[data-state="active"]::after {
  top: 0;
  bottom: 0;
  left: auto;
  right: -2px; /* Offset to align with the border */
  width: 2px;
  height: auto;
  border-radius: var(--t-border-radius-100) 0 0 var(--t-border-radius-100);
  animation: slideInVertical 250ms var(--t-easing-in-out) forwards;
  transform-origin: top;
}

@keyframes slideInVertical {
  from {
    transform: scaleY(0);
  }
  to {
    transform: scaleY(1);
  }
}

/* Responsive adjustments */
@media (max-width: 640px) {
  .tabsList {
    flex-wrap: nowrap;
    overflow-x: auto;
  }
}
