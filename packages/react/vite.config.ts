import { defineConfig } from 'vite';
import react from '@vitejs/plugin-react';
import path from 'path';

export default defineConfig({
  plugins: [
    react()
  ],
  build: {
    lib: {
      entry: path.resolve(__dirname, 'src/index.ts'),
      name: 'TagaddodReact',
      formats: ['es', 'cjs'],
      fileName: (format) => `index.${format === 'es' ? 'es' : 'cjs'}.js`
    },
    rollupOptions: {
      external: ['react', 'react-dom', '@radix-ui/react-avatar', '@radix-ui/react-checkbox', '@radix-ui/react-form', '@radix-ui/react-popover', '@radix-ui/react-radio-group', '@radix-ui/react-switch', '@radix-ui/react-tabs', '@tabler/icons-react', '@tanstack/react-table', 'clsx'],
      output: {
        globals: {
          react: 'React',
          'react-dom': 'ReactDOM'
        },
        assetFileNames: (assetInfo) => {
          if (assetInfo.name === 'style.css') {
            return 'react.css';
          }
          return assetInfo.name;
        },
        preserveModules: false, // Set to false to generate flat bundle structure
        entryFileNames: (chunkInfo) => {
          return `index.${chunkInfo.format === 'es' ? 'es' : 'cjs'}.js`;
        }
      }
    },
    minify: false,
    sourcemap: true,
    outDir: 'dist',
    emptyOutDir: false // Changed to false to prevent removing files generated by other processes
  },
  resolve: {
    alias: {
      '@tagaddod/tokens/css/tokens.css': path.resolve(__dirname, '../tokens/dist/css/tokens.css'),
      '@tagaddod/tokens/css': path.resolve(__dirname, '../tokens/dist/css/tokens.css'),
      '@tagaddod/tokens/tagaddod': path.resolve(__dirname, '../tokens/dist/tagaddod/vars.css'),
      '@tagaddod/tokens/greenpan': path.resolve(__dirname, '../tokens/dist/greenpan/vars.css'),
      '@tagaddod/tokens': path.resolve(__dirname, '../tokens/dist')
    }
  },
  css: {
    preprocessorOptions: {
      css: {
        modules: false
      }
    }
  }
});