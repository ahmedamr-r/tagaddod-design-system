{"version":3,"file":"Badge.cjs.js","sources":["../../../src/components/Badge/Badge.tsx"],"sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport styles from './Badge.module.css';\n\nexport const badgeTones = ['default', 'info', 'success', 'warning', 'critical', 'magic'] as const;\nexport type BadgeTone = typeof badgeTones[number];\n\nexport const badgeSizes = ['medium', 'large', 'xlarge'] as const;\nexport type BadgeSize = typeof badgeSizes[number];\n\nexport interface BadgeProps extends React.HTMLAttributes<HTMLSpanElement> {\n  /**\n   * The label text to display inside the badge\n   */\n  children: React.ReactNode;\n  /**\n   * The tone of the badge (affects colors)\n   * @default 'default'\n   */\n  tone?: BadgeTone;\n  /**\n   * The size of the badge\n   * @default 'medium'\n   */\n  size?: BadgeSize;\n  /**\n   * Whether to display the badge with strong styling\n   * @default false\n   */\n  strong?: boolean;\n  /**\n   * Optional icon to display before the label\n   */\n  icon?: React.ReactNode;\n  /**\n   * Additional class names to apply\n   */\n  className?: string;\n}\n\nexport const Badge: React.FC<BadgeProps> = ({\n  children,\n  tone = 'default',\n  size = 'medium',\n  strong = false,\n  icon,\n  className,\n  ...props\n}) => {\n  // Detect if we need to apply RTL text fixes\n  const isRTL = document.dir === 'rtl' || document.documentElement.dir === 'rtl';\n  \n  // Apply line height style based on text direction\n  const lineHeightStyle = {\n    lineHeight: isRTL ? 'var(--t-line-height-arabic, 1.2)' : 'var(--t-line-height-english, 1.5)'\n  };\n\n  return (\n    <span \n      className={clsx(\n        styles.badge,\n        styles[`tone-${tone}`],\n        styles[`size-${size}`],\n        strong && styles.strong,\n        className\n      )}\n      style={lineHeightStyle}\n      {...props}\n    >\n      {icon && <span className={styles.icon}>{icon}</span>}\n      <span className={styles.label} style={lineHeightStyle}>{children}</span>\n    </span>\n  );\n};\n\nexport default Badge;\n"],"names":["jsxs","clsx","styles","jsx"],"mappings":";;;;;AAIO,MAAM,aAAa,CAAC,WAAW,QAAQ,WAAW,WAAW,YAAY,OAAO;AAGhF,MAAM,aAAa,CAAC,UAAU,SAAS,QAAQ;AAiC/C,MAAM,QAA8B,CAAC;AAAA,EAC1C;AAAA,EACA,OAAO;AAAA,EACP,OAAO;AAAA,EACP,SAAS;AAAA,EACT;AAAA,EACA;AAAA,EACA,GAAG;AACL,MAAM;AAEJ,QAAM,QAAQ,SAAS,QAAQ,SAAS,SAAS,gBAAgB,QAAQ;AAGzE,QAAM,kBAAkB;AAAA,IACtB,YAAY,QAAQ,qCAAqC;AAAA,EAC3D;AAGE,SAAAA,2BAAA,kBAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAWC,KAAA;AAAA,QACTC,aAAAA,QAAO;AAAA,QACPA,aAAAA,QAAO,QAAQ,IAAI,EAAE;AAAA,QACrBA,aAAAA,QAAO,QAAQ,IAAI,EAAE;AAAA,QACrB,UAAUA,aAAO,QAAA;AAAA,QACjB;AAAA,MACF;AAAA,MACA,OAAO;AAAA,MACN,GAAG;AAAA,MAEH,UAAA;AAAA,QAAA,QAASC,2BAAAA,kBAAAA,IAAA,QAAA,EAAK,WAAWD,aAAAA,QAAO,MAAO,UAAK,MAAA;AAAA,yDAC5C,QAAK,EAAA,WAAWA,aAAAA,QAAO,OAAO,OAAO,iBAAkB,SAAS,CAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EACnE;AAEJ;;;;;"}