{"version":3,"file":"Modal.es.js","sources":["../../../src/components/Modal/Modal.tsx"],"sourcesContent":["import React from 'react';\nimport * as Dialog from '@radix-ui/react-dialog';\nimport clsx from 'clsx';\nimport { Button } from '../Button/Button';\nimport { IconX } from '@tabler/icons-react';\nimport styles from './Modal.module.css';\n\nexport interface ModalProps extends React.ComponentPropsWithoutRef<typeof Dialog.Root> {\n  children: React.ReactNode;\n  trigger?: React.ReactNode;\n  title?: React.ReactNode;\n  showTitle?: boolean;\n  showFooter?: boolean;\n  footerStyle?: 'default' | 'style1' | 'style2';\n  cancelLabel?: string;\n  confirmLabel?: string;\n  size?: 'default' | 'fullscreen';\n  rtl?: boolean;\n  onCancel?: () => void;\n  onConfirm?: () => void;\n}\n\nexport const Modal = ({\n  children,\n  trigger,\n  title = 'Title',\n  showTitle = true,\n  showFooter = true,\n  footerStyle = 'default',\n  cancelLabel = 'Cancel',\n  confirmLabel = 'Label',\n  size = 'default',\n  rtl = false,\n  onCancel,\n  onConfirm,\n  ...props\n}: ModalProps) => {\n  return (\n    <Dialog.Root {...props}>\n      {trigger && <Dialog.Trigger asChild>{trigger}</Dialog.Trigger>}\n      <Dialog.Portal>\n        <Dialog.Overlay className={styles.overlay} />\n        <Dialog.Content \n          className={clsx(styles.content, {\n            [styles.fullscreen]: size === 'fullscreen',\n            [styles.rtl]: rtl\n          })}\n          dir={rtl ? 'rtl' : 'ltr'}\n        >\n          {showTitle && (\n            <div className={styles.header}>\n              <Dialog.Title className={styles.title}>\n                {title}\n              </Dialog.Title>\n              <Dialog.Close className={styles.closeButton} aria-label=\"Close\">\n                <IconX size={18} />\n              </Dialog.Close>\n            </div>\n          )}\n          \n          <div className={styles.body}>\n            {children}\n          </div>\n          \n          {showFooter && (\n            <div className={clsx(styles.footer, styles[`footerStyle${footerStyle.charAt(0).toUpperCase() + footerStyle.slice(1)}`])}>\n              {footerStyle === 'default' && (\n                <>\n                  <Button \n                    variant=\"secondary\" \n                    onClick={onCancel}\n                  >\n                    {cancelLabel}\n                  </Button>\n                  <Button \n                    variant=\"primary\" \n                    onClick={onConfirm}\n                  >\n                    {confirmLabel}\n                  </Button>\n                </>\n              )}\n              {footerStyle === 'style1' && (\n                <>\n                  <div className={styles.footerSwapArea}>Swap</div>\n                  <div className={styles.footerButtonGroup}>\n                    <Button \n                      variant=\"secondary\" \n                      onClick={onCancel}\n                    >\n                      {cancelLabel}\n                    </Button>\n                    <Button \n                      variant=\"primary\" \n                      onClick={onConfirm}\n                    >\n                      {confirmLabel}\n                    </Button>\n                  </div>\n                </>\n              )}\n              {footerStyle === 'style2' && (\n                <div className={styles.footerButtonGroup}>\n                  <Button \n                    variant=\"secondary\" \n                    onClick={onCancel}\n                  >\n                    {cancelLabel}\n                  </Button>\n                  <Button \n                    variant=\"primary\" \n                    onClick={onConfirm}\n                  >\n                    {confirmLabel}\n                  </Button>\n                </div>\n              )}\n            </div>\n          )}\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\n\nexport default Modal;"],"names":["jsxs","Dialog.Root","Dialog.Trigger","Dialog.Portal","jsx","Dialog.Overlay","Dialog.Content","Dialog.Title","Dialog.Close","Fragment"],"mappings":"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"}