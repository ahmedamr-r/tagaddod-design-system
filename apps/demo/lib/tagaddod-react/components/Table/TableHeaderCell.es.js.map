{"version":3,"file":"TableHeaderCell.es.js","sources":["../../../src/components/Table/TableHeaderCell.tsx"],"sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { IconChevronDown, IconChevronUp, IconHelp } from '@tabler/icons-react';\nimport { Checkbox } from '../Checkbox';\nimport styles from './Table.module.css';\nimport { TableHeaderCellProps } from './types';\n\nexport const TableHeaderCell: React.FC<TableHeaderCellProps> = ({\n  children,\n  isSortable = false,\n  sortDirection = false,\n  onSort,\n  showCheckbox = false,\n  isChecked = false,\n  onCheckboxChange,\n  showHelp = false,\n  helpText,\n  className = '',\n}) => {\n  // Detect RTL for line height adjustments\n  const isRTL = document.dir === 'rtl' || document.documentElement.dir === 'rtl';\n  \n  // Create lineHeightStyle object for proper text rendering\n  const lineHeightStyle = {\n    lineHeight: isRTL ? 'var(--t-line-height-arabic, 1.2)' : 'var(--t-line-height-english, 1.5)'\n  };\n\n  // Helper to render sort icons\n  const renderSortIcon = () => {\n    if (!isSortable) return null;\n    \n    if (sortDirection === 'asc') {\n      return <IconChevronUp className={styles.sortIcon} size={16} />;\n    }\n    \n    if (sortDirection === 'desc') {\n      return <IconChevronDown className={styles.sortIcon} size={16} />;\n    }\n    \n    // Default sort icon (neutral state)\n    return (\n      <span className={styles.sortIconDefault}>\n        <IconChevronUp className={styles.sortIconInactive} size={16} />\n      </span>\n    );\n  };\n\n  return (\n    <th \n      className={clsx(\n        styles.tableHeaderCell,\n        isSortable && styles.sortable,\n        className\n      )}\n      onClick={isSortable ? onSort : undefined}\n    >\n      <div className={styles.headerCellContent}>\n        {showCheckbox && (\n          <div className={styles.headerCheckbox}>\n            <Checkbox\n              checked={isChecked}\n              onCheckedChange={(checked) => onCheckboxChange?.(checked === true)}\n              onClick={(e) => e.stopPropagation()} // Prevent cell click when clicking checkbox\n            />\n          </div>\n        )}\n        \n        {typeof children === 'string' ? (\n          <span className={styles.headerCellLabel} style={lineHeightStyle}>\n            {children}\n          </span>\n        ) : (\n          children\n        )}\n        \n        {isSortable && renderSortIcon()}\n        \n        {showHelp && helpText && (\n          <div className={styles.helpIconWrapper} title={helpText}>\n            <IconHelp className={styles.helpIcon} size={16} />\n          </div>\n        )}\n      </div>\n    </th>\n  );\n};\n"],"names":["jsx","jsxs"],"mappings":";;;;;;;AAOO,MAAM,kBAAkD,CAAC;AAAA,EAC9D;AAAA,EACA,aAAa;AAAA,EACb,gBAAgB;AAAA,EAChB;AAAA,EACA,eAAe;AAAA,EACf,YAAY;AAAA,EACZ;AAAA,EACA,WAAW;AAAA,EACX;AAAA,EACA,YAAY;AACd,MAAM;AAEJ,QAAM,QAAQ,SAAS,QAAQ,SAAS,SAAS,gBAAgB,QAAQ;AAGzE,QAAM,kBAAkB;AAAA,IACtB,YAAY,QAAQ,qCAAqC;AAAA,EAC3D;AAGA,QAAM,iBAAiB,MAAM;AACvB,QAAA,CAAC,WAAmB,QAAA;AAExB,QAAI,kBAAkB,OAAO;AAC3B,mDAAQ,eAAc,EAAA,WAAW,OAAO,UAAU,MAAM,IAAI;AAAA,IAAA;AAG9D,QAAI,kBAAkB,QAAQ;AAC5B,mDAAQ,iBAAgB,EAAA,WAAW,OAAO,UAAU,MAAM,IAAI;AAAA,IAAA;AAIhE,WACGA,kCAAAA,IAAA,QAAA,EAAK,WAAW,OAAO,iBACtB,UAAAA,kCAAAA,IAAC,eAAc,EAAA,WAAW,OAAO,kBAAkB,MAAM,GAAI,CAAA,GAC/D;AAAA,EAEJ;AAGE,SAAAA,kCAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAW;AAAA,QACT,OAAO;AAAA,QACP,cAAc,OAAO;AAAA,QACrB;AAAA,MACF;AAAA,MACA,SAAS,aAAa,SAAS;AAAA,MAE/B,UAACC,kCAAA,KAAA,OAAA,EAAI,WAAW,OAAO,mBACpB,UAAA;AAAA,QAAA,gBACED,kCAAA,IAAA,OAAA,EAAI,WAAW,OAAO,gBACrB,UAAAA,kCAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,SAAS;AAAA,YACT,iBAAiB,CAAC,YAAY,qDAAmB,YAAY;AAAA,YAC7D,SAAS,CAAC,MAAM,EAAE,gBAAgB;AAAA,UAAA;AAAA,QAAA,GAEtC;AAAA,QAGD,OAAO,aAAa,WAClBA,sCAAA,QAAA,EAAK,WAAW,OAAO,iBAAiB,OAAO,iBAC7C,SAAA,CACH,IAEA;AAAA,QAGD,cAAc,eAAe;AAAA,QAE7B,YAAY,YACXA,kCAAAA,IAAC,OAAI,EAAA,WAAW,OAAO,iBAAiB,OAAO,UAC7C,UAAAA,kCAAA,IAAC,YAAS,WAAW,OAAO,UAAU,MAAM,IAAI,EAClD,CAAA;AAAA,MAAA,EAEJ,CAAA;AAAA,IAAA;AAAA,EACF;AAEJ;"}